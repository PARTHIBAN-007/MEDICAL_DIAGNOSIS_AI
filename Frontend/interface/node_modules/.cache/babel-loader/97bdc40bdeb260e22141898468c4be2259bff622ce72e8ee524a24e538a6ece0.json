{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medicine Recommendation\\\\Frontend\\\\interface\\\\src\\\\components\\\\SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PredictedResults from './PredictedResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomInput = () => {\n  _s();\n  const [predictedData, setPredictedData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const symptoms = event.target.elements.symptoms.value.trim();\n    try {\n      const response = await fetch('http://localhost:8000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symptoms: symptoms.split(',')\n        }) // Convert to array\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      setPredictedData(data);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to predict disease. Please try again.');\n      setPredictedData(null);\n    }\n  };\n  const handleReset = () => {\n    setPredictedData(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Disease Prediction System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"symptoms\",\n          placeholder: \"Enter symptoms (comma-separated)\",\n          className: \"border border-gray-300 px-2 py-1 rounded-lg w-96\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-lg\",\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), predictedData && /*#__PURE__*/_jsxDEV(PredictedResults, {\n      predictedData: predictedData,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomInput, \"ftYcXt/3axDJfwEsjdlqqamp+vA=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","PredictedResults","jsxDEV","_jsxDEV","SymptomInput","_s","predictedData","setPredictedData","error","setError","handleSubmit","event","preventDefault","symptoms","target","elements","value","trim","response","fetch","method","headers","body","JSON","stringify","split","ok","Error","data","json","console","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","onReset","_c","$RefreshReg$"],"sources":["D:/Medicine Recommendation/Frontend/interface/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PredictedResults from './PredictedResults';\r\n\r\nconst SymptomInput = () => {\r\n  const [predictedData, setPredictedData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const symptoms = event.target.elements.symptoms.value.trim();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ symptoms: symptoms.split(',') }), // Convert to array\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPredictedData(data);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Failed to predict disease. Please try again.');\r\n      setPredictedData(null);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPredictedData(null);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Disease Prediction System</h1>\r\n      <form onSubmit={handleSubmit} className=\"mb-4\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"symptoms\"\r\n            placeholder=\"Enter symptoms (comma-separated)\"\r\n            className=\"border border-gray-300 px-2 py-1 rounded-lg w-96\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded-lg\">\r\n            Predict\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      {predictedData && <PredictedResults predictedData={predictedData} onReset={handleReset} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}