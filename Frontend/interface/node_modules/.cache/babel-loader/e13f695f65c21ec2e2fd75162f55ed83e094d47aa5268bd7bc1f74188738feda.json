{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medicine Recommendation\\\\Frontend\\\\interface\\\\src\\\\components\\\\SymptomInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomInput = () => {\n  _s();\n  // Initialize state\n  const [predictedValues, setPredictedValues] = useState([]);\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Example: Fetch data from API and update predictedValues state\n    // const response = await fetch('/api/predict', { method: 'POST', body: formData });\n    // const data = await response.json();\n    // setPredictedValues(data.predictedValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"symptoms\",\n        placeholder: \"Enter symptoms...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), predictedValues.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicted Values:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictedValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomInput, \"sk9xtl4w8Sjyjvcs0IBzHXxaFtM=\");\n_c = SymptomInput;\nexport default SymptomInput;\nvar _c;\n$RefreshReg$(_c, \"SymptomInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SymptomInput","_s","predictedValues","setPredictedValues","handleSubmit","event","preventDefault","children","onSubmit","type","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","value","index","_c","$RefreshReg$"],"sources":["D:/Medicine Recommendation/Frontend/interface/src/components/SymptomInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SymptomInput = () => {\r\n  // Initialize state\r\n  const [predictedValues, setPredictedValues] = useState([]);\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // Example: Fetch data from API and update predictedValues state\r\n    // const response = await fetch('/api/predict', { method: 'POST', body: formData });\r\n    // const data = await response.json();\r\n    // setPredictedValues(data.predictedValues);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form input fields */}\r\n        <input type=\"text\" name=\"symptoms\" placeholder=\"Enter symptoms...\" />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* Display predicted values */}\r\n      {predictedValues.length > 0 && (\r\n        <div>\r\n          {/* Render predicted values */}\r\n          <h2>Predicted Values:</h2>\r\n          <ul>\r\n            {predictedValues.map((value, index) => (\r\n              <li key={index}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMO,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA;IACA;IACA;EACF,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAMS,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBAE3BR,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrEhB,OAAA;QAAQU,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EAGNb,eAAe,CAACc,MAAM,GAAG,CAAC,iBACzBjB,OAAA;MAAAQ,QAAA,gBAEER,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhB,OAAA;QAAAQ,QAAA,EACGL,eAAe,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChCpB,OAAA;UAAAQ,QAAA,EAAiBW;QAAK,GAAbC,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAnCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}